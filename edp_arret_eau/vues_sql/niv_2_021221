( WITH sq AS (
         SELECT arret_eau_p.arrondisse AS arrondissement,
            arret_eau_p.geom,
            arret_eau_p.id,
            arret_eau_p.nature_res,
            arret_eau_p.statut,
            arret_eau_p.adresse,
            st_clusterdbscan(arret_eau_p.geom, eps => (greatest(least((29.3*'%resol%'+130.5),500::numeric),150::numeric))::double precision, minpoints => 0) OVER () AS cid
           FROM edp.arret_eau_p

          WHERE ((nature_res='%res%'))
          AND arret_eau_p.arrondisse IS NOT NULL
          AND ((arrondisse='%arr%') OR ('tous' = '%arr%'))
          AND ((motif='%mtf%') OR ('tous' = '%mtf%'))
          AND ((statut='%stt%') OR ('tous' = '%stt%'))
          AND edp.getslidecat(statut::text, prevu_deb::text, prevu_fin::text) > 0
          AND edp.getslidecat(statut::text, prevu_deb::text, prevu_fin::text) <= '%sldr%'::int


        ), ep_encours AS (
         SELECT count(*) AS nb_arr_encours,
            sq.cid
           FROM sq
          WHERE sq.statut::text = 'EN COURS'::text
          GROUP BY sq.cid
          ORDER BY sq.cid
        ), ep_prevu AS (
         SELECT count(*) AS nb_arr_prevu,
            sq.cid
           FROM sq
          WHERE sq.statut::text = 'PREVU'::text
          GROUP BY sq.cid
          ORDER BY sq.cid
        ), sq2 AS (
         SELECT sq.cid,
            st_centroid(st_collect(sq.geom)) AS geom,
            hstore(array_agg(sq.id::character varying),array_agg(sq.adresse)) as ids_in_cluster,
            count(*) AS nb_arr_tot
           FROM sq
          GROUP BY sq.cid
          ORDER BY sq.cid
        ), sq3 AS (
         SELECT sq2.cid,
            sq2.geom,
            sq2.ids_in_cluster,
                CASE
                    WHEN epe.nb_arr_encours IS NULL THEN '0'::bigint
                    ELSE epe.nb_arr_encours
                END AS nb_arr_encours,
                CASE
                    WHEN epp.nb_arr_prevu IS NULL THEN '0'::bigint
                    ELSE epp.nb_arr_prevu
                END AS nb_arr_prevu,
            sq2.nb_arr_tot,
                CASE
                    WHEN (round((epe.nb_arr_encours * 100 / sq2.nb_arr_tot)::numeric / 5.0) * 5.0)::integer IS NULL THEN 0
                    ELSE (round((epe.nb_arr_encours * 100 / sq2.nb_arr_tot)::numeric / 5.0) * 5.0)::integer
                END AS ratio_encours,
            sq2.nb_arr_tot::double precision / 20::double precision * 60::double precision + 20::double precision AS val_calc
           FROM sq2
             LEFT JOIN ep_encours epe ON sq2.cid = epe.cid
             LEFT JOIN ep_prevu epp ON sq2.cid = epp.cid
        )
 SELECT sq3.cid,
    sq3.geom,
    sq3.ids_in_cluster,
    sq3.nb_arr_encours,
    sq3.nb_arr_prevu,
    sq3.nb_arr_tot,
    sq3.ratio_encours,
    round(sq3.val_calc)::integer AS val_calc,
    LEAST(sq3.val_calc, 65::double precision)::integer AS csize,
    concat('4') AS niv_zoom_tmp,
 	'%res%' as nature_res
   FROM sq3)
